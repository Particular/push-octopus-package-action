name: Push package to Octopus Deploy
description: 'Creates and pushes build output to Octopus Deploy for deployment.'
inputs:
  octopus-deploy-api-key:
    description: 'API key for Octopus Deploy, which should already be masked as a secret'
    required: true
  additional-metadata-paths:
    description: 'Additional metadata files that should be copied to the root of the deployment package. File patterns are supported, one pattern per line.'
    required: false
    default: ''
  perform-nuget-verify:
    description: 'A flag to indicate that the nuget signature verification step should be ran.'
    default: 'true'
  perform-assets-verify:
    description: 'A flag to indicate that the executable signature verification step should be ran.'
    default: 'false'
  perform-deploy-verify:
    description: 'A flag to indicate that the cat file signature verification step should be ran.'
    default: 'false'
runs:
  using: 'composite'
  steps:
   - name: Validate proper runner OS
     if: runner.os == 'Linux' && (inputs.perform-assets-verify == 'true' || inputs.perform-deploy-verify == 'true')
     run: |
        echo "Asset and deploy verifications require Windows."
        exit 1
     shell: pwsh
   - name: Verify nuget package signatures
     if: ${{ inputs.perform-nuget-verify == 'true' }}
     run: dotnet nuget verify nugets/
     shell: pwsh
   - name: Verify assets signatures
     if: runner.os == 'Windows' && inputs.perform-assets-verify == 'true'
     run: Get-ChildItem -Recurse -File assets -Filter *.exe | foreach {&"C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x86\signtool.exe" verify /pa $_.FullName}
     shell: pwsh
   - name: Verify deploy signatures
     if: runner.os == 'Windows' && inputs.perform-deploy-verify == 'true'
     run: Get-ChildItem -Recurse -File deploy -Filter *.cat | foreach {&"C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x86\signtool.exe" verify /pa $_.FullName}
     shell: pwsh
   - name: Install Octopus CLI
     uses: OctopusDeploy/install-octopus-cli-action@v1.2.1
     with:
       version: latest

