name: Push package to Octopus Deploy
description: 'Creates and pushes build output to Octopus Deploy for deployment.'
inputs:
  octopus-deploy-api-key:
    description: 'API key for Octopus Deploy, which should already be masked as a secret'
    required: true
  additional-metadata-paths:
    description: 'Additional metadata files that should be copied to the root of the deployment package. File patterns are supported, one pattern per line.'
    required: false
    default: ''
runs:
  using: 'composite'
  steps:
    - name: Verify nuget package signatures
      run: Get-ChildItem -Recurse -File nugets -Filter *.nupkg -ErrorAction:Ignore | foreach {dotnet nuget verify $_.FullName}
      shell: pwsh
    - name: Verify assets signatures
      if: runner.os == 'Windows'
      run: Get-ChildItem -Recurse -File assets -Filter *.exe -ErrorAction:Ignore | foreach {&"C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x86\signtool.exe" verify /pa $_.FullName}
      shell: pwsh
    - name: Verify deploy signatures
      if: runner.os == 'Windows'
      run: Get-ChildItem -Recurse -File deploy -Filter *.cat -ErrorAction:Ignore | foreach {&"C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x86\signtool.exe" verify /pa $_.FullName}
      shell: pwsh
    - name: Install Octopus CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1.2.1
      with:
        version: latest
